"""Initial migration

Revision ID: cc9cca815e5f
Revises: 
Create Date: 2023-03-28 16:00:47.688198

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'cc9cca815e5f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('odoo_id', sa.Integer(), nullable=True),
    sa.Column('int_ref', sa.String(length=64), nullable=True),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('categ_name', sa.String(length=128), nullable=True),
    sa.Column('sale_ok', sa.Boolean(), nullable=True),
    sa.Column('odoo_tmpl_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_products_categ_name'), ['categ_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_products_int_ref'), ['int_ref'], unique=True)
        batch_op.create_index(batch_op.f('ix_products_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_products_odoo_id'), ['odoo_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_products_odoo_tmpl_id'), ['odoo_tmpl_id'], unique=False)

    op.create_table('warehouses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location_name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('warehouses', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_warehouses_location_name'), ['location_name'], unique=True)

    op.create_table('inventories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('warehouse_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('quantity_reserved', sa.Integer(), nullable=True),
    sa.Column('quantity_available', sa.Integer(), nullable=True),
    sa.Column('inventory_date', sa.DateTime(), nullable=True),
    sa.Column('out_of_stock', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('out_of_stock_products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('quantity_reserved', sa.Integer(), nullable=True),
    sa.Column('quantity_available', sa.Integer(), nullable=True),
    sa.Column('inventory_date', sa.DateTime(), nullable=True),
    sa.Column('out_of_stock', sa.Boolean(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('warehouse_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('posts')
    with op.batch_alter_table('clients', schema=None) as batch_op:
        batch_op.drop_index('ix_clients_username')

    op.drop_table('clients')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('role_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('confirmed', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('location', sa.String(length=64), nullable=True))
        batch_op.add_column(sa.Column('member_since', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('last_seen', sa.DateTime(), nullable=True))
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=64),
               nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=64),
               nullable=True)
        batch_op.drop_constraint('users_email_key', type_='unique')
        batch_op.drop_constraint('users_username_key', type_='unique')
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)
        batch_op.create_foreign_key(None, 'roles', ['role_id'], ['id'])
        batch_op.drop_column('about_author')
        batch_op.drop_column('favorite_color')
        batch_op.drop_column('date_added')
        batch_op.drop_column('name')
        batch_op.drop_column('profile_pic')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('profile_pic', sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('date_added', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('favorite_color', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('about_author', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.create_unique_constraint('users_username_key', ['username'])
        batch_op.create_unique_constraint('users_email_key', ['email'])
        batch_op.alter_column('email',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=200),
               nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.drop_column('last_seen')
        batch_op.drop_column('member_since')
        batch_op.drop_column('location')
        batch_op.drop_column('confirmed')
        batch_op.drop_column('role_id')

    op.create_table('clients',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='clients_role_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='clients_pkey')
    )
    with op.batch_alter_table('clients', schema=None) as batch_op:
        batch_op.create_index('ix_clients_username', ['username'], unique=False)

    op.create_table('posts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('author', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('date_posted', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('slug', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('poster_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['poster_id'], ['users.id'], name='posts_poster_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='posts_pkey')
    )
    op.drop_table('out_of_stock_products')
    op.drop_table('inventories')
    with op.batch_alter_table('warehouses', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_warehouses_location_name'))

    op.drop_table('warehouses')
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_products_odoo_tmpl_id'))
        batch_op.drop_index(batch_op.f('ix_products_odoo_id'))
        batch_op.drop_index(batch_op.f('ix_products_name'))
        batch_op.drop_index(batch_op.f('ix_products_int_ref'))
        batch_op.drop_index(batch_op.f('ix_products_categ_name'))

    op.drop_table('products')
    # ### end Alembic commands ###
